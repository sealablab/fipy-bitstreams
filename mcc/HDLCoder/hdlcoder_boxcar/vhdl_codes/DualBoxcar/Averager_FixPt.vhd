-- -------------------------------------------------------------
-- 
-- File Name: hdl_prj\hdlsrc\DualBoxcarAveragerFixedPoint\Averager_FixPt.vhd
-- Created: 2025-03-30 20:27:36
-- 
-- Generated by MATLAB 23.2, HDL Coder 23.2, and Simulink 23.2
-- 
-- -------------------------------------------------------------


-- -------------------------------------------------------------
-- 
-- Module: Averager_FixPt
-- Source Path: DualBoxcarAveragerFixedPoint/DSP/Dual_Averager_0/Single_Averager/Averager_FixPt
-- Hierarchy Level: 3
-- Model version: 6.42
-- 
-- -------------------------------------------------------------
LIBRARY IEEE;
USE IEEE.std_logic_1164.ALL;
USE IEEE.numeric_std.ALL;

ENTITY Averager_FixPt IS
  PORT( Clk                               :   IN    std_logic;
        Reset                             :   IN    std_logic;
        DataIn                            :   IN    signed(31 DOWNTO 0);  -- int32
        AvgLength                         :   IN    unsigned(15 DOWNTO 0);  -- uint16
        ValidIn                           :   IN    std_logic;  -- ufix1
        DataOut                           :   OUT   signed(47 DOWNTO 0)  -- sfix48
        );
END Averager_FixPt;


ARCHITECTURE rtl OF Averager_FixPt IS

  -- Signals
  SIGNAL ValidOut                         : std_logic;  -- ufix1
  SIGNAL AvgOut                           : signed(47 DOWNTO 0);  -- sfix48
  SIGNAL DataOutReg                       : signed(47 DOWNTO 0);  -- sfix48
  SIGNAL ValidOutReg                      : std_logic;  -- ufix1
  SIGNAL cnt1                             : unsigned(15 DOWNTO 0);  -- ufix16
  SIGNAL current_state                    : std_logic;  -- ufix1
  SIGNAL AvgOut_next                      : signed(47 DOWNTO 0);  -- sfix48
  SIGNAL DataOutReg_next                  : signed(47 DOWNTO 0);  -- sfix48
  SIGNAL ValidOutReg_next                 : std_logic;  -- ufix1
  SIGNAL cnt1_next                        : unsigned(15 DOWNTO 0);  -- ufix16
  SIGNAL current_state_next               : std_logic;  -- ufix1

BEGIN
  Averager_FixPt_1_process : PROCESS (Clk)
  BEGIN
    IF Clk'EVENT AND Clk = '1' THEN
      IF Reset = '1' THEN
        AvgOut <= to_signed(0, 48);
        DataOutReg <= to_signed(0, 48);
        ValidOutReg <= '0';
        cnt1 <= to_unsigned(16#0000#, 16);
        current_state <= '0';
      ELSE 
        AvgOut <= AvgOut_next;
        DataOutReg <= DataOutReg_next;
        ValidOutReg <= ValidOutReg_next;
        cnt1 <= cnt1_next;
        current_state <= current_state_next;
      END IF;
    END IF;
  END PROCESS Averager_FixPt_1_process;

  Averager_FixPt_1_output : PROCESS (AvgLength, AvgOut, DataIn, DataOutReg, ValidIn, ValidOutReg, cnt1,
       current_state)
    VARIABLE AvgLength1 : unsigned(15 DOWNTO 0);
    VARIABLE AvgOut_temp : signed(47 DOWNTO 0);
    VARIABLE DataOutReg_temp : signed(47 DOWNTO 0);
    VARIABLE ValidOutReg_temp : std_logic;
    VARIABLE cnt1_temp : unsigned(15 DOWNTO 0);
  BEGIN
    AvgOut_temp := AvgOut;
    DataOutReg_temp := DataOutReg;
    ValidOutReg_temp := ValidOutReg;
    cnt1_temp := cnt1;
    current_state_next <= current_state;
    --MATLAB Function 'DSP/Dual_Averager_0/Single_Averager/Averager_FixPt'
    --auto-generated
    AvgLength1 := AvgLength;
    --Waiting for trigger
    CASE current_state IS
      WHEN '0' =>
        ValidOutReg_temp := '0';
        IF ValidIn = '1' THEN 
          current_state_next <= '1';
          cnt1_temp := AvgLength1 - to_unsigned(16#0001#, 16);
          AvgOut_temp := resize(DataIn, 48);
        ELSE 
          current_state_next <= '0';
        END IF;
      WHEN '1' =>
        IF ValidIn = '1' THEN 
          AvgOut_temp := AvgOut + resize(DataIn, 48);
          cnt1_temp := cnt1 - to_unsigned(16#0001#, 16);
        END IF;
        IF cnt1_temp = to_unsigned(16#0000#, 16) THEN 
          DataOutReg_temp := AvgOut_temp;
          ValidOutReg_temp := '1';
          current_state_next <= '0';
        END IF;
      WHEN OTHERS => 
        NULL;
    END CASE;
    ValidOut <= ValidOutReg_temp;
    DataOut <= DataOutReg_temp;
    AvgOut_next <= AvgOut_temp;
    DataOutReg_next <= DataOutReg_temp;
    ValidOutReg_next <= ValidOutReg_temp;
    cnt1_next <= cnt1_temp;
  END PROCESS Averager_FixPt_1_output;


END rtl;

